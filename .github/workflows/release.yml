name: Release
on:
  release:
    tags:
    - 'v*'
jobs:
  Release:
    runs-on: ${{ matrix.os }}
    env:
      ECM_ROOT: 'C:\Program Files\ECM'
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest]
        include:
          - os: ubuntu-18.04
            cmake-defines: '-D CPACK_GENERATOR="DEB;RPM;7Z" -D CMAKE_BUILD_TYPE=Release'
            upload-files: 'build/*.deb;build/*.rpm;build/*.7z'
          - os: windows-latest
            extra-cmake-modules: '5.70.0'
            cmake-defines: '-D OPENSSL_ROOT_DIR="C:/Program Files/Git/mingw64" -D PORTABLE_MODE=ON -D CPACK_GENERATOR="NSIS;7Z"'
            upload-files: 'build/*.exe;build/*.7z'
    steps:
    - name: Enable Git symlinks
      if: runner.os == 'Windows'
      run: git config --global core.symlinks true

    - name: Clone repo
      uses: actions/checkout@v2.3.1
      with:
        submodules: true

    - name: Install dependent apt packages
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install extra-cmake-modules libqt5x11extras5-dev qttools5-dev qtmultimedia5-dev rpm

    - name: Install Qt
      if: runner.os == 'Windows'
      uses: jurplel/install-qt-action@v2.7.2

    - name: Install Extra CMake Modules
      if: runner.os == 'Windows'
      run: |
        git clone --depth 1 --branch v${{ matrix.extra-cmake-modules }} https://github.com/KDE/extra-cmake-modules.git
        cmake -S extra-cmake-modules -B extra-cmake-modules/build
        cmake --build extra-cmake-modules/build --target install

    - name: Install png2ico
      if: runner.os == 'Windows'
      run: choco install png2ico

    - name: Build
      run: |
        mkdir build
        cd build
        cmake ${{ matrix.cmake-defines }} ..
        cmake --build . --target package --parallel 2 --config Release

    - name: Upload
      uses: AButler/upload-release-assets@v2.0
      with:
        files: ${{ matrix.upload-files }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
